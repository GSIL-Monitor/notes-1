
1、eclipse中记住git密码：
	直接在.git/config文件中添加如下配置：
		[credential]    
    		helper = store --file .git-credentials


git log --pretty=oneline			日志单行显示
export GIT_DEITOR_vim 				设置编辑器
git branch --set-upstream-to=orgin/develop	将当前分支与远程develop分支关联
git checkout -- <文件名>			丢弃工作区修改，只对工作区的文件有效
git reset HEAD <文件名> 			把stage区文件放回到工作区
git reset --hard 提交id				git版本回退到 提交id后的版本
git config -l 					查看所有配置 
git config -l --global 				全局配置
git log -3 --pretty=oneline HEAD		显示最近3行记录，且单行显示
git log --pretty=oneline adbdf3			显示adbdf3前缀的唯一提交记录日志
git log --graph					带时间轴线的日志
git remote set-url origin http://		修改远程仓库地址
git branch --set-upstream-to=origin/dev 	建立本地到上游（远端）仓的链接 --这样代码才能提交上去
git branch --unset-upstream master		取消对master的跟踪
git reset HEAD^					回退到上一版本
git reset HEAD^^				回退到上上一版本
git reset HEAD~n				回退到n次前的版本
git reflog					可以查看到被覆盖的提交记录
git remote add origin https://../xx.git		关联远程仓库
git push -u origin master			首次将分支推到远程仓库
git branch -vv					查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）
git remote -vv					查看当前远程仓库信息
git push origin :functional			删除远程分支functional
git push --set-upstream origin functional	本地分支推到远程并创建远程分支functional
git stash					把未提交的修改内容放到暂存区
git stash pop					把暂存区的内容恢复到工作区
git remote prune origin				删除远程不存在但在本地还存在的分支

git tag -a <版本号> -m "版本信息"		创建本地tag
git push origin --tags				tag推送到远程仓库
git tag -d <版本号>				删除本地版本号

新服务器  4qq1234qwer
